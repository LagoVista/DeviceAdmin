//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LagoVista.IoT.DeviceAdmin.Resources {
    using System;
    using System.Reflection;
    
    
    /// <summary>
    ///    A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class DeviceLibraryResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        internal DeviceLibraryResources() {
        }
        
        /// <summary>
        ///    Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("LagoVista.IoT.DeviceAdmin.Resources.DeviceLibraryResources", typeof(DeviceLibraryResources).GetTypeInfo().Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///    Overrides the current thread's CurrentUICulture property for all
        ///    resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Associated Attribute.
        /// </summary>
        public static string Action_AssociatedAttribute {
            get {
                return ResourceManager.GetString("Action_AssociatedAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The associated attribute will be the default attribute for this action..
        /// </summary>
        public static string Action_AssociatedAttribute_Help {
            get {
                return ResourceManager.GetString("Action_AssociatedAttribute_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Actions can perform functionality on a Device to manipulate it&apos;s real world or attribute states.
        /// </summary>
        public static string Action_Description {
            get {
                return ResourceManager.GetString("Action_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Execute this Script from REST Get.
        /// </summary>
        public static string Action_ExecuteFromGet {
            get {
                return ResourceManager.GetString("Action_ExecuteFromGet", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This action will be executed from a REST Get service call with the attribute in the query string for the device id or device group..
        /// </summary>
        public static string Action_ExecuteFromGet_Help {
            get {
                return ResourceManager.GetString("Action_ExecuteFromGet_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Execute this Script from REST Post.
        /// </summary>
        public static string Action_ExecuteFromPost {
            get {
                return ResourceManager.GetString("Action_ExecuteFromPost", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This action will be executed from a web service call for the device or device group in the form of a REST Post with fom post values as described in the actions attributes.
        /// </summary>
        public static string Action_ExecuteFromPost_Help {
            get {
                return ResourceManager.GetString("Action_ExecuteFromPost_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Execute from Script.
        /// </summary>
        public static string Action_ExecuteFromScript {
            get {
                return ResourceManager.GetString("Action_ExecuteFromScript", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This action can be executed by another action or a script associated with the device configuration.
        /// </summary>
        public static string Action_ExecuteFromScript_Help {
            get {
                return ResourceManager.GetString("Action_ExecuteFromScript_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Execute From State Machine.
        /// </summary>
        public static string Action_ExecuteFromStateMachine {
            get {
                return ResourceManager.GetString("Action_ExecuteFromStateMachine", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to You can use this action to be executed when your state machine transitions between states..
        /// </summary>
        public static string Action_ExecuteFromstateMachine_Help {
            get {
                return ResourceManager.GetString("Action_ExecuteFromstateMachine_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Actions can perform functionality on a Device to manipulate it&apos;s real world or attribute states.
        /// </summary>
        public static string Action_Help {
            get {
                return ResourceManager.GetString("Action_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Node Red Flows.
        /// </summary>
        public static string Action_NodeRedFlows {
            get {
                return ResourceManager.GetString("Action_NodeRedFlows", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to True/False.
        /// </summary>
        public static string Action_Parameter_Tyeps_TrueFalse {
            get {
                return ResourceManager.GetString("Action_Parameter_Tyeps_TrueFalse", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Parameter Type.
        /// </summary>
        public static string Action_Parameter_Type {
            get {
                return ResourceManager.GetString("Action_Parameter_Type", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Parameter Types.
        /// </summary>
        public static string Action_Parameter_Types {
            get {
                return ResourceManager.GetString("Action_Parameter_Types", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Decimal.
        /// </summary>
        public static string Action_Parameter_Types_Decimal {
            get {
                return ResourceManager.GetString("Action_Parameter_Types_Decimal", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Integer.
        /// </summary>
        public static string Action_Parameter_Types_Integer {
            get {
                return ResourceManager.GetString("Action_Parameter_Types_Integer", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to String.
        /// </summary>
        public static string Action_Parameter_Types_String {
            get {
                return ResourceManager.GetString("Action_Parameter_Types_String", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Parameters.
        /// </summary>
        public static string Action_Parameters {
            get {
                return ResourceManager.GetString("Action_Parameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Remote URI.
        /// </summary>
        public static string Action_RemoteUri {
            get {
                return ResourceManager.GetString("Action_RemoteUri", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Script.
        /// </summary>
        public static string Action_Script {
            get {
                return ResourceManager.GetString("Action_Script", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Shared Action.
        /// </summary>
        public static string Action_Shared {
            get {
                return ResourceManager.GetString("Action_Shared", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to A Shared Action is one that is predefined and can be attached to a device configuration.  A Shared Action can be used so that implements a specific Shared Action can participate in a Device Group..
        /// </summary>
        public static string Action_Standard_Help {
            get {
                return ResourceManager.GetString("Action_Standard_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Action.
        /// </summary>
        public static string Action_Title {
            get {
                return ResourceManager.GetString("Action_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to An Action Parameter are parameter that can be passed to an action.  They can be passed in as a arguement to a script, as a KVP form value in a rest form POST, or in the query string of a rest GET method..
        /// </summary>
        public static string ActionParameter_Description {
            get {
                return ResourceManager.GetString("ActionParameter_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to An Action Parameter are parameter that can be passed to an action.  They can be passed in as a arguement to a script, as a KVP form value in a rest form POST, or in the query string of a rest GET method..
        /// </summary>
        public static string ActionParameter_Help {
            get {
                return ResourceManager.GetString("ActionParameter_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Action Parameter.
        /// </summary>
        public static string ActionParameter_Title {
            get {
                return ResourceManager.GetString("ActionParameter_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This key will be used as the parameter name for the form post or query string attribute.  The key must be lower case and contain only letters and numbers, it should also start with a letter, not a number..
        /// </summary>
        public static string Actoin_Parameter_Key_Help {
            get {
                return ResourceManager.GetString("Actoin_Parameter_Key_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Notes are free form text that can be attached to many different types of entities..
        /// </summary>
        public static string AdminNote_Description {
            get {
                return ResourceManager.GetString("AdminNote_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Notes are free form text that can be attached to many different types of entities..
        /// </summary>
        public static string AdminNote_Help {
            get {
                return ResourceManager.GetString("AdminNote_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Admin Note.
        /// </summary>
        public static string AdminNote_Title {
            get {
                return ResourceManager.GetString("AdminNote_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Attributes are meta-data that are attached to a device configuration that are used to maintain the state of the device.  Attributes can be one of the following, a simple value with a unit, a standard attribute that is common across many device configurations or a state machine..
        /// </summary>
        public static string Attribute_Description {
            get {
                return ResourceManager.GetString("Attribute_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Direction.
        /// </summary>
        public static string Attribute_Direction {
            get {
                return ResourceManager.GetString("Attribute_Direction", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to An attribute can be an Input which can only be set, it can be an Output which is Read Only or it can be and Input and an Output which can both be read and updated..
        /// </summary>
        public static string Attribute_Direction_Help {
            get {
                return ResourceManager.GetString("Attribute_Direction_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Input.
        /// </summary>
        public static string Attribute_Direction_Input {
            get {
                return ResourceManager.GetString("Attribute_Direction_Input", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Input and Output.
        /// </summary>
        public static string Attribute_Direction_InputAndOutput {
            get {
                return ResourceManager.GetString("Attribute_Direction_InputAndOutput", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Output.
        /// </summary>
        public static string Attribute_Direction_Output {
            get {
                return ResourceManager.GetString("Attribute_Direction_Output", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Attributes are meta-data that are attached to a device configuration that are used to maintain the state of the device.  Attributes can be one of the following, a simple value with a unit, a standard attribute that is common across many device configurations or a state machine..
        /// </summary>
        public static string Attribute_Help {
            get {
                return ResourceManager.GetString("Attribute_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Shared.
        /// </summary>
        public static string Attribute_Shared {
            get {
                return ResourceManager.GetString("Attribute_Shared", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to You can configure your attribute to be a Shared Attribute.  Some attributes such as temperature, speed, battery level, direction may be common accross your devices.  A Shared Attribute is easy to add and promotes re-use across devices..
        /// </summary>
        public static string Attribute_SharedAttribute_Help {
            get {
                return ResourceManager.GetString("Attribute_SharedAttribute_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Simple.
        /// </summary>
        public static string Attribute_Simple {
            get {
                return ResourceManager.GetString("Attribute_Simple", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to State Machine.
        /// </summary>
        public static string Attribute_StateMachine {
            get {
                return ResourceManager.GetString("Attribute_StateMachine", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to You can configure your attribute to be a state machine.  If you do so you can describe the different states that your device can be in and perform an action when the device transitions between states.  Your device configuration can have many state machines that can communicate with each other..
        /// </summary>
        public static string Attribute_StateMachine_Help {
            get {
                return ResourceManager.GetString("Attribute_StateMachine_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Attribute.
        /// </summary>
        public static string Attribute_Title {
            get {
                return ResourceManager.GetString("Attribute_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to You can configure your attribute to be a simple value that is specific for this device configuration.  If you do so you have the option to provide a set of units such as MPH, KPH for speed, F/C for temperature..
        /// </summary>
        public static string Attribute_UnitSet_Help {
            get {
                return ResourceManager.GetString("Attribute_UnitSet_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Abbreviation.
        /// </summary>
        public static string AttributeUnit_Abbreviation {
            get {
                return ResourceManager.GetString("AttributeUnit_Abbreviation", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Conversion Script.
        /// </summary>
        public static string AttributeUnit_ConversionScript {
            get {
                return ResourceManager.GetString("AttributeUnit_ConversionScript", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Provide a formula that will convert from the default units to this unit.  .
        /// </summary>
        public static string AttributeUnit_ConversionScript_Help {
            get {
                return ResourceManager.GetString("AttributeUnit_ConversionScript_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to An attribute can have many units.  For example, if the value is temperature, it can be expressed in Celcius or Farenheight, those attributes can be added here.  An Attribute Unit belongs to a Unit Set, attributes are stored with a default value in an attribute set and can be converted between different units via the default units..
        /// </summary>
        public static string AttributeUnit_Description {
            get {
                return ResourceManager.GetString("AttributeUnit_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to An attribute can have many units.  For example, if the value is temperature, it can be expressed in Celcius or Farenheight, those attributes can be added here.  An Attribute Unit belongs to a Unit Set, attributes are stored with a default value in an attribute set and can be converted between different units via the default units..
        /// </summary>
        public static string AttributeUnit_Help {
            get {
                return ResourceManager.GetString("AttributeUnit_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Default Units.
        /// </summary>
        public static string AttributeUnit_IsDefault {
            get {
                return ResourceManager.GetString("AttributeUnit_IsDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to NumberDecimal.
        /// </summary>
        public static string AttributeUnit_NumberDecimal {
            get {
                return ResourceManager.GetString("AttributeUnit_NumberDecimal", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Attribute Unit.
        /// </summary>
        public static string AttributeUnit_Title {
            get {
                return ResourceManager.GetString("AttributeUnit_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Unit Definitions.
        /// </summary>
        public static string AttributeUnitDefinitions {
            get {
                return ResourceManager.GetString("AttributeUnitDefinitions", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to An attribute can have many units.  For example, if the value is temperature, it can be expressed in Celcius or Farenheight, those attributes can be added here.  An Attribute Unit belongs to a Unit Set, attributes are stored with a default value in an attribute set and can be converted between different units via the default units..
        /// </summary>
        public static string AttributeUnitSet_Description {
            get {
                return ResourceManager.GetString("AttributeUnitSet_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Unit Sets are a collection of units that can be attached to an attribute.   An example of a unit set is Weight, weight can be Pounds, Kilograms, Grams, etc....
        /// </summary>
        public static string AttributeUnitSet_Help {
            get {
                return ResourceManager.GetString("AttributeUnitSet_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Attribute Unit Set.
        /// </summary>
        public static string AttributeUnitSet_Title {
            get {
                return ResourceManager.GetString("AttributeUnitSet_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to An attribute can have many units.  For example, if the value is temperature, it can be expressed in Celcius or Farenheight, those attributes can be added here.  An Attribute Unit belongs to a Unit Set, attributes are stored with a default value in an attribute set and can be converted between different units via the default units..
        /// </summary>
        public static string AttributeUnitSetObj_Help {
            get {
                return ResourceManager.GetString("AttributeUnitSetObj_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Created By.
        /// </summary>
        public static string Common_CreatedBy {
            get {
                return ResourceManager.GetString("Common_CreatedBy", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Creation Date.
        /// </summary>
        public static string Common_CreationDate {
            get {
                return ResourceManager.GetString("Common_CreationDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Description.
        /// </summary>
        public static string Common_Description {
            get {
                return ResourceManager.GetString("Common_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Is Public.
        /// </summary>
        public static string Common_IsPublic {
            get {
                return ResourceManager.GetString("Common_IsPublic", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Is Required.
        /// </summary>
        public static string Common_IsRequired {
            get {
                return ResourceManager.GetString("Common_IsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Key.
        /// </summary>
        public static string Common_Key {
            get {
                return ResourceManager.GetString("Common_Key", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The key is used to identify this item in scripts and must be unique with respect to it&apos;s parent. One a key has been assigned, it can not be changed..
        /// </summary>
        public static string Common_Key_Help {
            get {
                return ResourceManager.GetString("Common_Key_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The key must use only letters and numbers, and must be lowercase and must be between 3 and 20 characters..
        /// </summary>
        public static string Common_Key_Validation {
            get {
                return ResourceManager.GetString("Common_Key_Validation", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Last Updated.
        /// </summary>
        public static string Common_LastUpdated {
            get {
                return ResourceManager.GetString("Common_LastUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Last Updated By.
        /// </summary>
        public static string Common_LastUpdatedBy {
            get {
                return ResourceManager.GetString("Common_LastUpdatedBy", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Name.
        /// </summary>
        public static string Common_Name {
            get {
                return ResourceManager.GetString("Common_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Note.
        /// </summary>
        public static string Common_Note {
            get {
                return ResourceManager.GetString("Common_Note", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Notes.
        /// </summary>
        public static string Common_Notes {
            get {
                return ResourceManager.GetString("Common_Notes", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to System Id.
        /// </summary>
        public static string Common_UniqueId {
            get {
                return ResourceManager.GetString("Common_UniqueId", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Custom Fields can be used to extend Device Configuration.  It&apos;s not possible to know in advance what paramters each installation will require so these custom parameters can be defined when creating the device configration.  Then when a device is provisioned with the device configuration, those custom values can be populated.  Once they are added, they are first-class-citizens to be used in reports and scripts..
        /// </summary>
        public static string CustomField_Description {
            get {
                return ResourceManager.GetString("CustomField_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Field Type.
        /// </summary>
        public static string CustomField_FieldType {
            get {
                return ResourceManager.GetString("CustomField_FieldType", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to True/False.
        /// </summary>
        public static string CustomField_FieldType_Bool {
            get {
                return ResourceManager.GetString("CustomField_FieldType_Bool", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Date.
        /// </summary>
        public static string CustomField_FieldType_Date {
            get {
                return ResourceManager.GetString("CustomField_FieldType_Date", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Date Time.
        /// </summary>
        public static string CustomField_FIeldType_DateTime {
            get {
                return ResourceManager.GetString("CustomField_FIeldType_DateTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Decimal.
        /// </summary>
        public static string CustomField_FieldType_Decimal {
            get {
                return ResourceManager.GetString("CustomField_FieldType_Decimal", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Email.
        /// </summary>
        public static string CustomField_FieldType_Email {
            get {
                return ResourceManager.GetString("CustomField_FieldType_Email", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Integer.
        /// </summary>
        public static string CustomField_FieldType_Integer {
            get {
                return ResourceManager.GetString("CustomField_FieldType_Integer", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to IP Address.
        /// </summary>
        public static string CustomField_FieldType_IPAddress {
            get {
                return ResourceManager.GetString("CustomField_FieldType_IPAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Key.
        /// </summary>
        public static string CustomField_FieldType_Key {
            get {
                return ResourceManager.GetString("CustomField_FieldType_Key", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Password.
        /// </summary>
        public static string CustomField_FieldType_Password {
            get {
                return ResourceManager.GetString("CustomField_FieldType_Password", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Text.
        /// </summary>
        public static string CustomField_FieldType_String {
            get {
                return ResourceManager.GetString("CustomField_FieldType_String", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Time.
        /// </summary>
        public static string CustomField_FieldType_Time {
            get {
                return ResourceManager.GetString("CustomField_FieldType_Time", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Web Site.
        /// </summary>
        public static string CustomField_FieldType_WebSite {
            get {
                return ResourceManager.GetString("CustomField_FieldType_WebSite", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Custom Fields can be used to extend Device Configuration.  It&apos;s not possible to know in advance what paramters each installation will require so these custom parameters can be defined when creating the device configration.  Then when a device is provisioned with the device configuration, those custom values can be populated.  Once they are added, they are first-class-citizens to be used in reports and scripts..
        /// </summary>
        public static string CustomFIeld_Help {
            get {
                return ResourceManager.GetString("CustomFIeld_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Is Required.
        /// </summary>
        public static string CustomField_IsRequired {
            get {
                return ResourceManager.GetString("CustomField_IsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Label.
        /// </summary>
        public static string CustomField_Label {
            get {
                return ResourceManager.GetString("CustomField_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Validation RegEx.
        /// </summary>
        public static string CustomField_RegEx {
            get {
                return ResourceManager.GetString("CustomField_RegEx", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to If your field type is a string, you can add a custom validation regular expression to ensure the data that is captured is in the correct format..
        /// </summary>
        public static string CustomField_RegEx_Help {
            get {
                return ResourceManager.GetString("CustomField_RegEx_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Custom Field.
        /// </summary>
        public static string CustomField_Title {
            get {
                return ResourceManager.GetString("CustomField_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The Custom Field Collection is a collection of custom fields that can be used across different device configurations to promote reuse.
        /// </summary>
        public static string CustomFieldCollection_Description {
            get {
                return ResourceManager.GetString("CustomFieldCollection_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The Custom Field Collection is a collection of custom fields that can be used across different device configurations to promote reuse.
        /// </summary>
        public static string CustomFieldCollection_Help {
            get {
                return ResourceManager.GetString("CustomFieldCollection_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Custom Field Collection.
        /// </summary>
        public static string CustomFieldCollection_Title {
            get {
                return ResourceManager.GetString("CustomFieldCollection_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Default Value.
        /// </summary>
        public static string CustomFields_DefaultValue {
            get {
                return ResourceManager.GetString("CustomFields_DefaultValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to When an object is created that uses this default value it can optionally be inintialized with this default value..
        /// </summary>
        public static string CustomFields_DefaultValue_Help {
            get {
                return ResourceManager.GetString("CustomFields_DefaultValue_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Account.
        /// </summary>
        public static string Device_Account {
            get {
                return ResourceManager.GetString("Device_Account", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Battery Level.
        /// </summary>
        public static string Device_BatteryLevel {
            get {
                return ResourceManager.GetString("Device_BatteryLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Capabilities.
        /// </summary>
        public static string Device_Capabilities {
            get {
                return ResourceManager.GetString("Device_Capabilities", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Connection Status.
        /// </summary>
        public static string Device_ConnectionStatus {
            get {
                return ResourceManager.GetString("Device_ConnectionStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Custom Fields.
        /// </summary>
        public static string Device_CustomFields {
            get {
                return ResourceManager.GetString("Device_CustomFields", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Description.
        /// </summary>
        public static string Device_Description {
            get {
                return ResourceManager.GetString("Device_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Device Id.
        /// </summary>
        public static string Device_DeviceId {
            get {
                return ResourceManager.GetString("Device_DeviceId", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Your device id is a set of alpha numeric characters that will uniquely identify the device across your organization..
        /// </summary>
        public static string Device_DeviceId_Help {
            get {
                return ResourceManager.GetString("Device_DeviceId_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Device Id is a required field and must be unique..
        /// </summary>
        public static string Device_DeviceId_Required {
            get {
                return ResourceManager.GetString("Device_DeviceId_Required", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Notes.
        /// </summary>
        public static string Device_DeviceNotes {
            get {
                return ResourceManager.GetString("Device_DeviceNotes", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Device Type.
        /// </summary>
        public static string Device_DeviceType {
            get {
                return ResourceManager.GetString("Device_DeviceType", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Firmware Version.
        /// </summary>
        public static string Device_FirmwareVersion {
            get {
                return ResourceManager.GetString("Device_FirmwareVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Gateway .
        /// </summary>
        public static string Device_GatewayDevice {
            get {
                return ResourceManager.GetString("Device_GatewayDevice", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Geo Location.
        /// </summary>
        public static string Device_GeoLocation {
            get {
                return ResourceManager.GetString("Device_GeoLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Battery Powered.
        /// </summary>
        public static string Device_IsBatteryPowered {
            get {
                return ResourceManager.GetString("Device_IsBatteryPowered", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Last Contact.
        /// </summary>
        public static string Device_LastContact {
            get {
                return ResourceManager.GetString("Device_LastContact", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Location.
        /// </summary>
        public static string Device_Location {
            get {
                return ResourceManager.GetString("Device_Location", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Manufacturer.
        /// </summary>
        public static string Device_Manufacturer {
            get {
                return ResourceManager.GetString("Device_Manufacturer", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Model Number.
        /// </summary>
        public static string Device_ModelNumber {
            get {
                return ResourceManager.GetString("Device_ModelNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Online.
        /// </summary>
        public static string Device_Online {
            get {
                return ResourceManager.GetString("Device_Online", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Serial Number.
        /// </summary>
        public static string Device_SerialNumber {
            get {
                return ResourceManager.GetString("Device_SerialNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Status.
        /// </summary>
        public static string Device_Status {
            get {
                return ResourceManager.GetString("Device_Status", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Actions.
        /// </summary>
        public static string DeviceConfig_Actions {
            get {
                return ResourceManager.GetString("DeviceConfig_Actions", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Actions can perform functionality on a Device to manipulate it&apos;s real world or attribute states..
        /// </summary>
        public static string DeviceConfig_Actions_Help {
            get {
                return ResourceManager.GetString("DeviceConfig_Actions_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Attributes.
        /// </summary>
        public static string DeviceConfig_Attributes {
            get {
                return ResourceManager.GetString("DeviceConfig_Attributes", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Attributes are meta-data that are attached to a device configuration that are used to maintain the state of the device.  Attributes can be one of the following, a simple value with a unit, a standard attribute that is common across many device configurations or a state machine..
        /// </summary>
        public static string DeviceConfig_Attributes_Help {
            get {
                return ResourceManager.GetString("DeviceConfig_Attributes_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Configuration Version.
        /// </summary>
        public static string DeviceConfig_ConfigVersion {
            get {
                return ResourceManager.GetString("DeviceConfig_ConfigVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Custom Fields.
        /// </summary>
        public static string DeviceConfig_CustomFields {
            get {
                return ResourceManager.GetString("DeviceConfig_CustomFields", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Environments are used to maintain different device configurations that can be updated and tested without impacting production.  Also once an environment is migrated into Production it can be rolled back to Staging if issues are found..
        /// </summary>
        public static string DeviceConfig_Environment {
            get {
                return ResourceManager.GetString("DeviceConfig_Environment", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Development.
        /// </summary>
        public static string DeviceConfig_Environment_Development {
            get {
                return ResourceManager.GetString("DeviceConfig_Environment_Development", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The Development Environment should be used to make changes to a device configuration where it won&apos;t impact any devices that are used in a production capacity.  Once development or updates have been completed in this environment, those changes are published to the Staging environment so they can be tested..
        /// </summary>
        public static string DeviceConfig_Environment_Development_Help {
            get {
                return ResourceManager.GetString("DeviceConfig_Environment_Development_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Production.
        /// </summary>
        public static string DeviceConfig_Environment_Production {
            get {
                return ResourceManager.GetString("DeviceConfig_Environment_Production", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The Production Environment is the default environment for a device to be in.  Once it has been developed and tested, the device configuration will be moved in to production..
        /// </summary>
        public static string DeviceConfig_Environment_Production_Help {
            get {
                return ResourceManager.GetString("DeviceConfig_Environment_Production_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Staging.
        /// </summary>
        public static string DeviceConfig_Environment_Staging {
            get {
                return ResourceManager.GetString("DeviceConfig_Environment_Staging", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Once a new device configuration has been created or updated in the Development Environment and Tested in the Testing Environemnt, it will be moved to the Staging Environment where it be then be swapped into the Production Environment.  If issues are found once the new device configuration goes live the previous production configuration can be restored..
        /// </summary>
        public static string DeviceConfig_Environment_Staging_Help {
            get {
                return ResourceManager.GetString("DeviceConfig_Environment_Staging_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Manufacture.
        /// </summary>
        public static string DeviceConfig_Manufacture {
            get {
                return ResourceManager.GetString("DeviceConfig_Manufacture", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Model.
        /// </summary>
        public static string DeviceConfig_Model {
            get {
                return ResourceManager.GetString("DeviceConfig_Model", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to A Device Configuration can be thought of as a template for provisioning devices.  It defines the Meta-Data, Actions and Attributes that need to be effectively managed when provisioning thousand or even millions of devices.
        /// </summary>
        public static string DeviceConfiguration_Description {
            get {
                return ResourceManager.GetString("DeviceConfiguration_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to A Device Configuration can be thought of as a template for provisioning devices.  It defines the Meta-Data, Actions and Attributes that need to be effectively managed when provisioning thousand or even millions of devices.
        /// </summary>
        public static string DeviceConfiguration_Help {
            get {
                return ResourceManager.GetString("DeviceConfiguration_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Device Configuration.
        /// </summary>
        public static string DeviceConfiguration_Title {
            get {
                return ResourceManager.GetString("DeviceConfiguration_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Account.
        /// </summary>
        public static string Gateway_Account {
            get {
                return ResourceManager.GetString("Gateway_Account", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Address.
        /// </summary>
        public static string Gateway_Address {
            get {
                return ResourceManager.GetString("Gateway_Address", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Enter either a DNS name or a IP Address.
        /// </summary>
        public static string Gateway_Address_Help {
            get {
                return ResourceManager.GetString("Gateway_Address_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Custom Fields.
        /// </summary>
        public static string Gateway_CustomFields {
            get {
                return ResourceManager.GetString("Gateway_CustomFields", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Description.
        /// </summary>
        public static string Gateway_Description {
            get {
                return ResourceManager.GetString("Gateway_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Device Id.
        /// </summary>
        public static string Gateway_Device_Id {
            get {
                return ResourceManager.GetString("Gateway_Device_Id", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Geo Location.
        /// </summary>
        public static string Gateway_GeoLocation {
            get {
                return ResourceManager.GetString("Gateway_GeoLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Location.
        /// </summary>
        public static string Gateway_Location {
            get {
                return ResourceManager.GetString("Gateway_Location", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Manufacturer.
        /// </summary>
        public static string Gateway_Manufacturer {
            get {
                return ResourceManager.GetString("Gateway_Manufacturer", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Model Number.
        /// </summary>
        public static string Gateway_ModelNumber {
            get {
                return ResourceManager.GetString("Gateway_ModelNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Name.
        /// </summary>
        public static string Gateway_Name {
            get {
                return ResourceManager.GetString("Gateway_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Notes.
        /// </summary>
        public static string Gateway_Notes {
            get {
                return ResourceManager.GetString("Gateway_Notes", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Serial Number.
        /// </summary>
        public static string Gateway_SerialNumber {
            get {
                return ResourceManager.GetString("Gateway_SerialNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Firmware Version.
        /// </summary>
        public static string Gatway_Firmware_Version {
            get {
                return ResourceManager.GetString("Gatway_Firmware_Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to A Node Red Flow can be configured as part of an action to perform more complicated work flows and steps..
        /// </summary>
        public static string NodeRedFlow_Description {
            get {
                return ResourceManager.GetString("NodeRedFlow_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to A Node Red Flow can be configured as part of an action to perform more complicated work flows and steps..
        /// </summary>
        public static string NodeRedFlow_Help {
            get {
                return ResourceManager.GetString("NodeRedFlow_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Node Red Flow.
        /// </summary>
        public static string NodeRedFlow_Title {
            get {
                return ResourceManager.GetString("NodeRedFlow_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to A stanard action is template or an action that can be added to many device configurations.  What makes this powerful is that the devices can be queried for any devices that implement the action and can be used in common scripts.  From a programming standpoint a Standard Action is analogous to a method description on an interface..
        /// </summary>
        public static string SharedAction_Description {
            get {
                return ResourceManager.GetString("SharedAction_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to A stanard action is template or an action that can be added to many device configurations.  What makes this powerful is that the devices can be queried for any devices that implement the action and can be used in common scripts.  From a programming standpoint a Standard Action is analogous to a method description on an interface..
        /// </summary>
        public static string SharedAction_Help {
            get {
                return ResourceManager.GetString("SharedAction_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Shared Action.
        /// </summary>
        public static string SharedAction_Title {
            get {
                return ResourceManager.GetString("SharedAction_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to A Standard Attribute is an Attribute that is common to many Device Configurations and can be used to include devices that implement a set of Standard Attributes into a device group..
        /// </summary>
        public static string SharedAttribute_Description {
            get {
                return ResourceManager.GetString("SharedAttribute_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to A Standard Attribute is an Attribute that is common to many Device Configurations and can be used to include devices that implement a set of Standard Attributes into a device group..
        /// </summary>
        public static string SharedAttribute_Help {
            get {
                return ResourceManager.GetString("SharedAttribute_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Shared Attribute.
        /// </summary>
        public static string SharedAttribute_Title {
            get {
                return ResourceManager.GetString("SharedAttribute_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to A State is a conceptual entity that a Device Configuration, Attribute or other mechanism can be in.  The state machine can only be in exactly one state at a given time, an action is used to transition the state into another state and optionally perform an action at that time..
        /// </summary>
        public static string State_Description {
            get {
                return ResourceManager.GetString("State_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to State.
        /// </summary>
        public static string State_Title {
            get {
                return ResourceManager.GetString("State_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to A State is a conceptual entity that a Device Configuration, Attribute or other mechanism can be in.  The state machine can only be in exactly one state at a given time, an action is used to transition the state into another state and optionally perform an action at that time..
        /// </summary>
        public static string State_UserHelp {
            get {
                return ResourceManager.GetString("State_UserHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to State Machine.
        /// </summary>
        public static string StateMachine {
            get {
                return ResourceManager.GetString("StateMachine", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to A State Machine is a mechanism that allows for complex work flows to be created base on know the current state, an event that is applied, the new state when the event is applied as well as any actions that should take place on that transitions..
        /// </summary>
        public static string StateMachine_Description {
            get {
                return ResourceManager.GetString("StateMachine_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Event.
        /// </summary>
        public static string StateMachine_Event {
            get {
                return ResourceManager.GetString("StateMachine_Event", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Events.
        /// </summary>
        public static string StateMachine_Events {
            get {
                return ResourceManager.GetString("StateMachine_Events", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to A state machines transitions and actions are triggered by events.  These are the events that are assocaited with this state machine..
        /// </summary>
        public static string StateMachine_Events_Help {
            get {
                return ResourceManager.GetString("StateMachine_Events_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Exception on Missing Event.
        /// </summary>
        public static string StateMachine_Exception_OnInvalidEvent {
            get {
                return ResourceManager.GetString("StateMachine_Exception_OnInvalidEvent", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Your State Machine can be configured so that if an event arrives and the current state does not have a hanlder for that event, it will send an exception message..
        /// </summary>
        public static string StateMachine_Exception_OnInvalidEvent_Help {
            get {
                return ResourceManager.GetString("StateMachine_Exception_OnInvalidEvent_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Initialization Actions.
        /// </summary>
        public static string StateMachine_Initialization_Actions {
            get {
                return ResourceManager.GetString("StateMachine_Initialization_Actions", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to As set of actions and be defined when the state machine is created to perform any actions or initialize any variables.  The actions are guarenteed to be execute in the order they are listed and each action will finish executing prior to the next action being started..
        /// </summary>
        public static string StateMachine_Initialization_Actions_Help {
            get {
                return ResourceManager.GetString("StateMachine_Initialization_Actions_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Initial State.
        /// </summary>
        public static string StateMachine_InitialState {
            get {
                return ResourceManager.GetString("StateMachine_InitialState", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The Initial State will be the State that the State Machine will be in when the State Machine is first created. .
        /// </summary>
        public static string StateMachine_InitialState_Help {
            get {
                return ResourceManager.GetString("StateMachine_InitialState_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to New State.
        /// </summary>
        public static string StateMachine_NewState {
            get {
                return ResourceManager.GetString("StateMachine_NewState", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to When this transition occurs, the New State will be the state that the State Machine will currently be in.  It is possible that the the transition may leave the State Machine in the current state, if that&apos;s the case, the Transition is used to simply exectue an action..
        /// </summary>
        public static string StateMachine_NewState_Help {
            get {
                return ResourceManager.GetString("StateMachine_NewState_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to State.
        /// </summary>
        public static string StateMachine_State {
            get {
                return ResourceManager.GetString("StateMachine_State", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Action.
        /// </summary>
        public static string StateMachine_State_Action {
            get {
                return ResourceManager.GetString("StateMachine_State_Action", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Diagram X is the location on the state machine diagram where this state should be displayed.
        /// </summary>
        public static string StateMachine_State_DiagramX {
            get {
                return ResourceManager.GetString("StateMachine_State_DiagramX", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Diagram Y is the location on the state machine diagram where this state should be displayed.
        /// </summary>
        public static string StateMachine_State_DiagramY {
            get {
                return ResourceManager.GetString("StateMachine_State_DiagramY", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Transition In Action.
        /// </summary>
        public static string StateMachine_State_TransitionInAction {
            get {
                return ResourceManager.GetString("StateMachine_State_TransitionInAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This is an action that should take place when an event occurs that will transition the state machine into this state.
        /// </summary>
        public static string StateMachine_State_TransitionInAction_Help {
            get {
                return ResourceManager.GetString("StateMachine_State_TransitionInAction_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Transitions.
        /// </summary>
        public static string StateMachine_State_Transitions {
            get {
                return ResourceManager.GetString("StateMachine_State_Transitions", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to .
        /// </summary>
        public static string StateMachine_State_Transitions_Help {
            get {
                return ResourceManager.GetString("StateMachine_State_Transitions_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to States.
        /// </summary>
        public static string StateMachine_States {
            get {
                return ResourceManager.GetString("StateMachine_States", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to State Machine.
        /// </summary>
        public static string StateMachine_Title {
            get {
                return ResourceManager.GetString("StateMachine_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Transition Actions.
        /// </summary>
        public static string StateMachine_Transition_Action {
            get {
                return ResourceManager.GetString("StateMachine_Transition_Action", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to As the event triggers a transition between different states a set of actions can be execute.  The actions are guarenteed to be execute in the order they are listed and each action will finish executing prior to the next action being started..
        /// </summary>
        public static string StateMachine_Transition_Action_Help {
            get {
                return ResourceManager.GetString("StateMachine_Transition_Action_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This is the event that can be handled by the current state in which this transition is defined.  Each current state must have unique events defined that can be handled and it is not required for all states to handle all events.  The state machine can be configured to send an error message if an event comes in while the state machine can not handle the event..
        /// </summary>
        public static string StateMachine_Transition_EventHelp {
            get {
                return ResourceManager.GetString("StateMachine_Transition_EventHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to New State.
        /// </summary>
        public static string StateMachine_Transition_State {
            get {
                return ResourceManager.GetString("StateMachine_Transition_State", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Transitions.
        /// </summary>
        public static string StateMachine_Transitions {
            get {
                return ResourceManager.GetString("StateMachine_Transitions", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to A State Machine is a mechanism that allows for complex work flows to be created base on know the current state, an event that is applied, the new state when the event is applied as well as any actions that should take place on that transitions..
        /// </summary>
        public static string StateMachine_UserHelp {
            get {
                return ResourceManager.GetString("StateMachine_UserHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Variables.
        /// </summary>
        public static string StateMachine_Variables {
            get {
                return ResourceManager.GetString("StateMachine_Variables", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to A set of simple variables can be defined that will be availble through out the life time of your state machine.  These variables will be available to custom scripts or a REST Get action.   These variables should be considered Public Read and and Private Write.  That is to say that they can only be modified via actions triggered within the state machine or state machine initialization..
        /// </summary>
        public static string StateMachine_Variables_Help {
            get {
                return ResourceManager.GetString("StateMachine_Variables_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to An Event is something that can be applied to a StateMachine as the event is applied it will determine the current state and then optionally perform an action and transition to a new state if the current state is configured to handle this event..
        /// </summary>
        public static string StateMachineEvent_Description {
            get {
                return ResourceManager.GetString("StateMachineEvent_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to State Machine Event.
        /// </summary>
        public static string StateMachineEvent_Title {
            get {
                return ResourceManager.GetString("StateMachineEvent_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to An Event is something that can be applied to a StateMachine as the event is applied it will determine the current state and then optionally perform an action and transition to a new state if the current state is configured to handle this event..
        /// </summary>
        public static string StateMachineEvent_UserHelp {
            get {
                return ResourceManager.GetString("StateMachineEvent_UserHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to State Machines.
        /// </summary>
        public static string StateMachines {
            get {
                return ResourceManager.GetString("StateMachines", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to A State Transition can be added to a State.  A Transition is a Definition of an Event that can be handled, an Action to be Executed and a New State that the State Machine will be in after the event is handled.  Note that it is possible that the state may remain the same and the event will be used to only execute an action..
        /// </summary>
        public static string StateTransition_Description {
            get {
                return ResourceManager.GetString("StateTransition_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to State Transition.
        /// </summary>
        public static string StateTransition_Title {
            get {
                return ResourceManager.GetString("StateTransition_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to A State Transition can be added to a State.  A Transition is a Definition of an Event that can be handled, an Action to be Executed and a New State that the State Machine will be in after the event is handled.  Note that it is possible that the state may remain the same and the event will be used to only execute an action..
        /// </summary>
        public static string StateTransition_UserHelp {
            get {
                return ResourceManager.GetString("StateTransition_UserHelp", resourceCulture);
            }
        }
    }
}
